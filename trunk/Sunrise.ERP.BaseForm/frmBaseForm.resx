<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAfVJREFUOE+Vk21r
        01AYhvf7/CV+9JMDEWSIiiD4YYOunQjdGNJu4BY3261D2bTt+rZ2bUbXTDvazOnS2jbLe9f09jkndVIS
        BQ/cJB9yXfdzTpKZmcnazFwhWez8SYHuCwrPTlHBRkrCgydJ/H7ed32fV6BbI2gs5o0XY0hxeI4qLTwM
        ZfF0qRws2S118a9VFS/wKHKI2fQQs/MlvyRZuArkR2PAoeTKMu6/+Ih7wg/cWe3i7rP0tCSR/eYTuARq
        touu6eKkpWIhmsHzhW3MvdzA47nEtGA73Z4SMFh3XHS0G7R7Q3z5OUSjP8LnxiVie5kAwX7zVuDBYw/u
        E9hxcHxp47Bt4qBlISEN/IJ3HyQu4DAbm2C570BSbFS/W8gTvN80sXOmY+ur7RcIqToXGNTMYNYsKQ7B
        NvKygYOmgV2ChdNrrDdMv+BtogaXBF2dNRNMY7PmHIPPPXizfo2YOMDKieEXxIUj6CPggjfbqBFcaHtw
        ijXXVcRrKqKVAZaqml+wup5Dx8Jtc16mAyOY7Vmg5rjoweFSH4vHAYJoLAtZG1OzjQKN/Yk3axxeI3iF
        4EixhxAlHCR4/SZL79kl2GvmB8b3rGK5oiI8gf8qeEUCsTdGWrawd25i68zAWl3Dck1DpKwiVB5gcZKI
        GHCI7NP837Bf+hciZb4thaRHKwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnView.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAglJREFUOE+Vk91u
        ElEUhfs2+gA+hdoX8MIbb7wyXtlgExtUbJpG4m8GBhrSYhNp6UXJaCnWtkIpIlIoHcGC8tMx1NQKA8Pw
        3y7POcBFO1MSd7IyyclZ39p758zISL9efPyLybc/huq+yYvBfc2XAmqNLhSqeqcntU3UYtqJF0ABT2wx
        fQgFDKuE+IsBxoJtjL2MaiHmZUnX3z0FWkThmMQAdz2/cXX+GLcng2ch5wGRaA52xyeMT7jBzWxi2Zdk
        gIEeGVfOAugCB0XNLncYu8kiiqUmtnYk2OdDeOUMYGu/CNfaNoYCaDI1/1E6OCi3kSVk7+cDPOXW4S80
        sJKWtYCHfIQ1cELmpW0fkmSp3EL6qAmZnIeyCgwP3FjN1CD8bF4MUMnGOPsmazt91ELisIkGASz585h6
        vQ7P9yrc+3UtwGT24YRcPK514JjdYDN7wwVs56pYCuTxzBGETUjBJcpwflP1AbUuIaxex8bzGzAY38BM
        ZqZt02SbkMTCXgWzcRm2hKIF3DMKwLtRZKcvgTca8EWqw59T2cyeVBULYs9sjZZh2dUB4P015Kcvw/LY
        hIikIkDMHzIKMy8Ss5OY+a8lcETW84CQ5SbiU1cwY5og5l6yr5/sIua5eAXWvlkXQP+s8Tu3IJZOEZQa
        WMvVIWRULKYUzO0p4GMVcDEZlr54UWeJ9GX9r2jwP8gemwdRJplwAAAAAElFTkSuQmCC
</value>
  </data>
</root>